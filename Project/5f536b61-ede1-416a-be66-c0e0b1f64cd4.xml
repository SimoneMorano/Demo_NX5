<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>CASE state OF&#xD;
	0:&#xD;
		IF PositiveEnable XOR NegativeEnable THEN&#xD;
			Error:= FALSE;&#xD;
			ErrorID:=16#0;&#xD;
			Busy:=TRUE;&#xD;
			drvNega:= FALSE;&#xD;
			drvPosi:=FALSE;&#xD;
			FB_SDO_Write60FF.Execute:=FALSE;&#xD;
			Axis.ModeOfOperation := 3;   //Profile velocity mode (pV)&#xD;
			Axis.ControlWord := Axis.ControlWord OR WORD#2#0000_0001_0000_0000;   //Set Stop bit&#xD;
			state:= 3;&#xD;
		END_IF;&#xD;
		&#xD;
	3:&#xD;
		Axis.Profile_acceleration:=LREAL_TO_UDINT(Acceleration);&#xD;
		Axis.Profile_deceleration:=LREAL_TO_UDINT(Deceleration);			&#xD;
		IF PositiveEnable THEN&#xD;
			Axis.Target_velocity := LREAL_TO_DINT(Velocity);&#xD;
			drvPosi := TRUE;&#xD;
		ELSIF NegativeEnable THEN&#xD;
			Axis.Target_velocity := -LREAL_TO_DINT(Velocity);&#xD;
			drvNega := TRUE;&#xD;
		ELSE&#xD;
			state := 0;&#xD;
		END_IF;&#xD;
		FB_SDO_Write60FF.Execute := TRUE;&#xD;
		state:= 10;&#xD;
		&#xD;
	10:&#xD;
		FB_SDO_Write60FF.Execute := FALSE;&#xD;
		IF FB_SDO_Write60FF.Done THEN&#xD;
			state := 15;&#xD;
		ELSIF FB_SDO_Write60FF.Error THEN&#xD;
			Error:= TRUE;&#xD;
			ErrorID := FB_SDO_Write60FF.ErrorID;&#xD;
			state := 10010;&#xD;
		END_IF;&#xD;
	&#xD;
	&#xD;
	15:&#xD;
		IF PositiveEnable OR NegativeEnable THEN&#xD;
			Axis.ControlWord := (Axis.ControlWord  AND WORD#2#1111_1110_1111_1111);  //Reset Halt Bit 8&#xD;
			state:= 20;&#xD;
		ELSE&#xD;
			state := 0;&#xD;
		END_IF;&#xD;
&#xD;
	20:&#xD;
		Axis.Cmd.Pos:= Axis.Act.Pos;&#xD;
		IF (drvPosi AND not PositiveEnable) OR (drvNega AND NOT NegativeEnable) OR (drvPosi AND NegativeEnable) OR (drvNega AND PositiveEnable) THEN&#xD;
&#xD;
			state := 22;&#xD;
		//	Axis.ControlWord := Axis.ControlWord OR WORD#2#0000_0001_0000_0000;   //Set Bit 8 Halt&#xD;
		ELSIF ((Axis.ControlWord AND WORD#2#0000_0001_0000_0000) = WORD#2#0000_0001_0000_0000) OR (Axis.ModeOfOperation&lt;&gt;3)  OR (Axis.ModeOfOperationDisplay&lt;&gt;3) THEN  //Bit 8 in Controlword &#xD;
			Busy := FALSE;&#xD;
			state := 0;    // end with MC_Stop?&#xD;
		ELSIF (not Axis.DrvStatus.ServoOn) OR (NOT Axis.DrvStatus.Ready) OR (Axis.DrvStatus.DrvAlarm) THEN&#xD;
			ErrorID := ERR_SERVO_OFF;			//16#5441 operation with servo off&#xD;
			Error := TRUE;&#xD;
			state := 10020;&#xD;
		END_IF;&#xD;
	&#xD;
	22:&#xD;
		Axis.Target_velocity := 0;  //? With halt bit it make abrupt stop at 30rpm&#xD;
		FB_SDO_Write60FF.Execute := TRUE;&#xD;
		state:= 25;&#xD;
	&#xD;
	25:&#xD;
		FB_SDO_Write60FF.Execute := FALSE;&#xD;
		IF FB_SDO_Write60FF.Done THEN&#xD;
			state := 30;&#xD;
		ELSIF FB_SDO_Write60FF.Error THEN&#xD;
			ErrorID := FB_SDO_Write60FF.ErrorID;&#xD;
			state := 10025;&#xD;
		END_IF;&#xD;
		&#xD;
	30:&#xD;
		Axis.Cmd.Pos:= Axis.Act.Pos;&#xD;
		IF ((Axis.StatusWord AND WORD#2#0001_0000_0010_0000) = WORD#2#0001_0000_0010_0000) THEN  //Bit 5  and 12 in statusword&#xD;
			state := 0;&#xD;
			Busy:=FALSE;&#xD;
		END_IF;&#xD;
			&#xD;
	10000..20000:&#xD;
		Busy:=0;&#xD;
		state := 0;&#xD;
		ErrorID:= FB_SDO_Write60FF.ErrorID;&#xD;
		Axis.ControlWord := Axis.ControlWord OR WORD#2#0000_0001_0000_0000;   //Set Bit 8 Halt&#xD;
END_CASE;&#xD;
&#xD;
&#xD;
FB_SDO_Write60FF(NodeAdr:=Axis.Cfg.NodeAddress,SdoObj:=SdoObj60FF,TimeOut:=10,WriteDat:=Axis.Target_velocity,WriteSize:=4);</Text></StructuredTextModel>