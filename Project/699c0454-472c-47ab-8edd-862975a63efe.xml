<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>CASE state OF&#xD;
	0:&#xD;
		IF (Execute=TRUE) THEN&#xD;
			Error:= FALSE;&#xD;
			ErrorID:=16#0;&#xD;
			Busy:=TRUE;&#xD;
			Active:=FALSE;&#xD;
			InVelocity:=FALSE;&#xD;
			Axis.ModeOfOperation := 3;   //Profile velocity mode (pV)&#xD;
			Axis.ControlWord := Axis.ControlWord OR WORD#2#0000_0001_0000_0000;   //Set Stop bit&#xD;
			FB_SDO_Write60FF.Execute:=FALSE;&#xD;
			state:= 3;&#xD;
		END_IF;&#xD;
		&#xD;
	3:&#xD;
		Axis.Profile_acceleration:=LREAL_TO_UDINT(Acceleration);&#xD;
		Axis.Profile_deceleration:=LREAL_TO_UDINT(Deceleration);			&#xD;
		IF Direction= mcPositiveDirection THEN&#xD;
			Axis.Target_velocity := LREAL_TO_DINT(Velocity);&#xD;
		ELSE &#xD;
			Axis.Target_velocity := -LREAL_TO_DINT(Velocity);&#xD;
		END_IF;&#xD;
		state:= 10;&#xD;
		FB_SDO_Write60FF.Execute := TRUE;			//Write Target Velocity using SDO, to reduce PDO communication&#xD;
		&#xD;
	10:  //SDO  to wirte Target Velocity 60FF&#xD;
		FB_SDO_Write60FF.Execute := FALSE;&#xD;
		IF FB_SDO_Write60FF.Done THEN&#xD;
			state := 15;&#xD;
		ELSIF FB_SDO_Write60FF.Error THEN&#xD;
			Error := TRUE;&#xD;
			ErrorID := FB_SDO_Write60FF.ErrorID;&#xD;
			state := 10010;&#xD;
		END_IF;&#xD;
	&#xD;
	15:&#xD;
		Axis.ControlWord := (Axis.ControlWord  AND WORD#2#1111_1110_1111_1111);  //Reset Halt Bit 8&#xD;
		Active:=TRUE;&#xD;
		state:= 20;&#xD;
&#xD;
	20:&#xD;
		Axis.Cmd.Pos:= Axis.Act.Pos;&#xD;
		IF (Execute=TRUE)  THEN  // re-execute&#xD;
			state:= 3;&#xD;
		END_IF;&#xD;
			&#xD;
		IF ((Axis.StatusWord AND WORD#2#0000_0100_0000_0000) = WORD#2#0000_0100_0000_0000) THEN   //Bit 10 Target velocity reached&#xD;
			InVelocity := TRUE;&#xD;
		ELSE&#xD;
			InVelocity := FALSE;&#xD;
		END_IF;&#xD;
		&#xD;
		IF (((Axis.ControlWord AND WORD#2#0000_0001_0000_0000) = WORD#2#0000_0001_0000_0000)  AND ((Axis.StatusWord AND WORD#2#0001_0000_0000_0000) = WORD#2#0001_0000_0000_0000 ) )&#xD;
		OR (Axis.ModeOfOperationDisplay&lt;&gt;3) THEN  //Bit 8 in Controlword &#xD;
			Active:= FALSE;&#xD;
			Busy := FALSE;&#xD;
			InVelocity:=FALSE;&#xD;
			state := 0;    // end with MC_Stop?&#xD;
		ELSIF (not Axis.DrvStatus.ServoOn) OR (NOT Axis.DrvStatus.Ready) OR (Axis.DrvStatus.DrvAlarm) THEN&#xD;
			ErrorID := ERR_SERVO_OFF;			//16#5441 operation with servo off&#xD;
			Error := TRUE;&#xD;
			state := 10010;&#xD;
		END_IF;&#xD;
	10000..20000:&#xD;
		Active:=0;&#xD;
		Busy:=0;&#xD;
		InVelocity:=FALSE;&#xD;
		ErrorID:=FB_SDO_Write60FF.ErrorID;&#xD;
		state := 0;&#xD;
		Axis.ControlWord := Axis.ControlWord OR WORD#2#0000_0001_0000_0000;   //Set Bit 8 Halt&#xD;
END_CASE;&#xD;
&#xD;
&#xD;
FB_SDO_Write60FF(NodeAdr:=Axis.Cfg.NodeAddress,SdoObj:=SdoObj60FF,TimeOut:=10,WriteDat:=Axis.Target_velocity,WriteSize:=4);   //SDO for Target velocity 60FF</Text></StructuredTextModel>